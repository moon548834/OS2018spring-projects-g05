-- DO NOT MODIFY THIS FILE.
-- This file is generated by hard_tests_gen

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

use work.mul_d_test_const.all;
use work.global_const.all;
use work.bus_const.all;

entity mul_d_fake_ram is
    port (
        clk, rst: in std_logic;
        cpu_i: in BusC2D;
        cpu_o: out BusD2C
    );
end mul_d_fake_ram;

architecture bhv of mul_d_fake_ram is
    type WordsArray is array(0 to MAX_RAM_ADDRESS) of std_logic_vector(DataWidth);
    signal words: WordsArray;
    signal wordAddr: integer;
    signal bitSelect: std_logic_vector(DataWidth);
    signal llBit: std_logic;
    signal llLoc: std_logic_vector(AddrWidth);
begin
    cpu_o.busy <= PIPELINE_NONSTOP;

    wordAddr <= to_integer(unsigned(cpu_i.addr(11 downto 2)));

    bitSelect <= (
        31 downto 24 => cpu_i.byteSelect(3),
        23 downto 16 => cpu_i.byteSelect(2),
        15 downto 8 => cpu_i.byteSelect(1),
        7 downto 0 => cpu_i.byteSelect(0)
    );

    process (clk) begin
        if (rising_edge(clk)) then
            if (rst = RST_ENABLE) then
                -- CODE BELOW IS AUTOMATICALLY GENERATED
words(1) <= x"0b_40_02_3c"; -- RUN lui $2, 0x400b
words(2) <= x"33_33_42_34"; -- RUN ori $2, $2, 0x3333
words(3) <= x"33_33_03_3c"; -- RUN lui $3, 0x3333
words(4) <= x"33_33_63_34"; -- RUN ori $3, $3, 0x3333
words(5) <= x"12_40_04_3c"; -- RUN lui $4, 0x4012
words(6) <= x"00_30_82_44"; -- RUN mtc1 $2, $6
words(7) <= x"00_38_83_44"; -- RUN mtc1 $3, $7
words(8) <= x"00_40_84_44"; -- RUN mtc1 $4, $8
words(9) <= x"82_32_28_46"; -- RUN mul.d $f10, $f6, $f8
words(10) <= x"00_50_0a_44"; -- RUN mfc1 $10, $10
words(11) <= x"00_58_0b_44"; -- RUN mfc1 $11, $11
words(12) <= x"00_00_00_00"; -- RUN nop
words(13) <= x"0c_00_00_08"; -- RUN j 0x30
words(14) <= x"00_00_00_00"; -- RUN nop
            elsif ((cpu_i.enable = '1') and (cpu_i.write = '1')) then
                words(wordAddr) <= (words(wordAddr) and not bitSelect) or (cpu_i.dataSave and bitSelect);
            end if;
        end if;
    end process;

    cpu_o.dataLoad <= words(wordAddr) when (cpu_i.enable = '1') and (cpu_i.write = '0') else 32b"0";
end bhv;
