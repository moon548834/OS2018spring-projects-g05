-- DO NOT MODIFY THIS FILE.
-- This file is generated by hard_tests_gen

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

use work.multicore2_test_const.all;
use work.global_const.all;
use work.bus_const.all;

entity multicore2_fake_ram is
    port (
        clk, rst: in std_logic;
        cpu_i: in BusC2D;
        cpu_o: out BusD2C
    );
end multicore2_fake_ram;

architecture bhv of multicore2_fake_ram is
    type WordsArray is array(0 to MAX_RAM_ADDRESS) of std_logic_vector(DataWidth);
    signal words: WordsArray;
    signal wordAddr: integer;
    signal bitSelect: std_logic_vector(DataWidth);
    signal llBit: std_logic;
    signal llLoc: std_logic_vector(AddrWidth);
begin
    cpu_o.busy <= PIPELINE_NONSTOP;

    wordAddr <= to_integer(unsigned(cpu_i.addr(11 downto 2)));

    bitSelect <= (
        31 downto 24 => cpu_i.byteSelect(3),
        23 downto 16 => cpu_i.byteSelect(2),
        15 downto 8 => cpu_i.byteSelect(1),
        7 downto 0 => cpu_i.byteSelect(0)
    );

    process (clk) begin
        if (rising_edge(clk)) then
            if (rst = RST_ENABLE) then
                -- CODE BELOW IS AUTOMATICALLY GENERATED
words(1) <= x"00_80_1c_3c"; -- RUN lui $gp, 0x8000
words(2) <= x"01_78_08_40"; -- RUN mfc0 $t0, $15, 1
words(3) <= x"ff_03_08_31"; -- RUN andi $t0, $t0, 0x3ff
words(4) <= x"08_00_00_11"; -- RUN beq $t0, $0, 0x34-0x14
words(5) <= x"04_00_9c_23"; -- RUN addi $gp, $gp, 4
words(6) <= x"0d_00_00_08"; -- RUN j 0x34
words(7) <= x"00_00_00_00"; -- RUN nop
words(8) <= x"00_00_00_00"; -- RUN nop
words(9) <= x"00_00_00_00"; -- RUN nop
words(10) <= x"00_00_00_00"; -- RUN nop
words(11) <= x"00_00_00_00"; -- RUN nop
words(12) <= x"00_00_00_00"; -- RUN nop
words(13) <= x"0a_00_10_34"; -- RUN ori $s0, $0, 10
words(14) <= x"00_00_80_af"; -- RUN sw $0, 0($gp)
words(15) <= x"00_00_91_8f"; -- RUN lw $s1, 0($gp)
words(16) <= x"01_00_31_22"; -- RUN addi $s1, $s1, 1
words(17) <= x"00_00_91_af"; -- RUN sw $s1, 0($gp)
words(18) <= x"ff_ff_10_22"; -- RUN addi $s0, $s0, -1
words(19) <= x"02_00_00_12"; -- RUN beq $s0, $0, 0x58-0x50
words(20) <= x"00_00_00_00"; -- RUN nop
words(21) <= x"0f_00_00_08"; -- RUN j 0x3c
words(22) <= x"00_00_00_00"; -- RUN nop
words(23) <= x"16_00_00_08"; -- RUN j 0x58
words(24) <= x"00_00_00_00"; -- RUN nop
            elsif ((cpu_i.enable = '1') and (cpu_i.write = '1')) then
                words(wordAddr) <= (words(wordAddr) and not bitSelect) or (cpu_i.dataSave and bitSelect);
            end if;
        end if;
    end process;

    cpu_o.dataLoad <= words(wordAddr) when (cpu_i.enable = '1') and (cpu_i.write = '0') else 32b"0";
end bhv;
