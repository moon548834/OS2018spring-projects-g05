# Import a package
# Grammar: "IMPORT <packageName>"
# "IMPORT" should be in UPPER CASE, same below
IMPORT alu_const

# Define a signal to be checked
# Grammar: "DEFINE <signalName> <sub_instace_name.sub_sub_instance_name.(...).signal_name>: <type>"
DEFINE reg regfile_ist.regArray: RegArrayType

# Execute an assembly instruction
# Grammar: "RUN <assembly>"
RUN lui $10, 0xA000
RUN ori $3, $0, 0xeeff
RUN sh  $3, 0x102($10)
RUN ori $3, $0, 0x1122
RUN sh  $3, 0x100($10)
RUN lh  $1, 0x102($10)
ASSERT 12 reg(1) x"ffffeeff"
RUN lhu $1, 0x102($10)
ASSERT 14 reg(1) x"0000eeff"
RUN lh  $1, 0x100($10)
ASSERT 16 reg(1) x"00001122"
RUN lw  $1, 0x100($10)
ASSERT 18 reg(1) x"eeff1122"

# IF	| ID	| EX	| MEM	| WB	| assertion | period
# lui	|		|		|		|		|			|
# ori	| lui	|		|		|		|			|
# sh	| ori	| lui	|		|		|			|
# ori	| sh	| ori	| lui	|		|			|
# sh	| ori	| sh	| ori	| lui	|			|
# lh	| sh	| ori	| sh	| ori	| lui		| 6
# lh	|		| sh	| ori	| sh	| ori		|
# lhu	| lh	|		| sh	| ori	| sh		|
# lhu	|		| lh	| 		| sh	| ori		|
# lh	| lhu	|		| lh	|		| sh		|
# lh	|		| lhu	|		| lh	|			|
# lw	| lh	|		| lhu	|		| lh		| 12
# lw	|		| lh	|		| lhu	|			|
#		| lw	| 		| lh	|		| lhu		| 14
#		|		| lw	|		| lh	|			|
#		|		|		| lw	| 		| lh		| 16
#		|		|		|		| lw	|			|
#		|		|		|		|		| lw		| 18